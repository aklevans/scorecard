// Code generated by MockGen. DO NOT EDIT.
// Source: clients/dependency/dependency_client.go

// Package mock_dependencyclient is a generated GoMock package.
package mockrepo

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	clients "github.com/ossf/scorecard/v5/clients"
	log "github.com/ossf/scorecard/v5/log"
)

// MockDependencyClient is a mock of DependencyClient interface.
type MockDependencyClient struct {
	ctrl     *gomock.Controller
	recorder *MockDependencyClientMockRecorder
}

// MockDependencyClientMockRecorder is the mock recorder for MockDependencyClient.
type MockDependencyClientMockRecorder struct {
	mock *MockDependencyClient
}

// NewMockDependencyClient creates a new mock instance.
func NewMockDependencyClient(ctrl *gomock.Controller) *MockDependencyClient {
	mock := &MockDependencyClient{ctrl: ctrl}
	mock.recorder = &MockDependencyClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDependencyClient) EXPECT() *MockDependencyClientMockRecorder {
	return m.recorder
}

// CreateGithubRepoClient mocks base method.
func (m *MockDependencyClient) CreateGithubRepoClient(arg0 context.Context, arg1 *log.Logger) clients.RepoClient {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGithubRepoClient", arg0, arg1)
	ret0, _ := ret[0].(clients.RepoClient)
	return ret0
}

// CreateGithubRepoClient indicates an expected call of CreateGithubRepoClient.
func (mr *MockDependencyClientMockRecorder) CreateGithubRepoClient(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGithubRepoClient", reflect.TypeOf((*MockDependencyClient)(nil).CreateGithubRepoClient), arg0, arg1)
}

// CreateGitlabRepoClient mocks base method.
func (m *MockDependencyClient) CreateGitlabRepoClient(arg0 context.Context, arg1 string) (clients.RepoClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGitlabRepoClient", arg0, arg1)
	ret0, _ := ret[0].(clients.RepoClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateGitlabRepoClient indicates an expected call of CreateGitlabRepoClient.
func (mr *MockDependencyClientMockRecorder) CreateGitlabRepoClient(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGitlabRepoClient", reflect.TypeOf((*MockDependencyClient)(nil).CreateGitlabRepoClient), arg0, arg1)
}
